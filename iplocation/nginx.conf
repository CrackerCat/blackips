#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid       /var/run/nginx.pid;

worker_rlimit_nofile 600000;

events {
    worker_connections  10024;
    multi_accept on;
    use epoll;
}


http {
    server_names_hash_bucket_size  64;
    #--- 支持 websocket 代理的必备配置
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
   }
    #关闭服务器版本提示
    server_tokens on;

    #提供限速配置
    limit_req_zone $binary_remote_addr$http_user_agent zone=perip:50m rate=1000r/s;
    #限制链接数目
    limit_conn_zone $server_name zone=perserver:50m;
    #被限速的返回503
    limit_req_status 503;

    ##
    # Logging Settings
    ##
    log_format  main  '{"scheme":"$scheme",'
                       '"remote_addr":"$remote_addr",'
                        '"proxy_addr":"$http_x_real_ip",'
                        '"forwarded_for_addr":"$http_x_forwarded_for",'
                        '"remote_user":"$remote_user",'
                        '"http_host":"$http_host",'
                        '"upstream_cache_status":"$upstream_cache_status",'
                        '"time_local":"$time_iso8601",'
                        '"request_method":"$request_method",'
                        '"request":"$request",'
                        '"status":"$status",'
                        '"body_bytes_sent":"$body_bytes_sent",'
                        '"http_referer":"$http_referer",'
                        '"http_user_agent":"$http_user_agent",'
                        '"request_time":"$request_time",'
                        '"request_filename":"$request_filename",'
                        '"upstream_response_time":"$upstream_response_time",'
                        '"upstream_addr":"$upstream_addr",'
                        '"logid":"$request_id",'
                        '"http_cookie":"$http_cookie"}';
    log_format  mini  '{"status":"$status",'
                       '"time_local":"$time_iso8601",'
                       '"request_time":"$request_time",'
                       '"remote_addr":"$remote_addr",'
                       '"request":"$request"}';
    #通用的日志格式记录
    log_format logger escape=none '{"time_local":"$time_iso8601","remote_addr":"$remote_addr","dockername":"$http_user_agent","context":$request_body}';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    include       mime.types;
    default_type  application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #最大允许200M文件上传
    client_max_body_size 500M;
    client_body_buffer_size 1m;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  600;
    keepalive_requests 5000;

    # 开启gzip
    gzip on;
    # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
    gzip_min_length 20;
    # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
    gzip_comp_level 9;
    # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript  image/jpeg image/gif image/png;
    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary on;
    # 设置gzip压缩针对的HTTP协议版本
    gzip_http_version 1.1;



    server {
            listen 9092 default;
            server_name www;
            root /var/www/html/Siteroot/;
            index index.php index.html index.htm;
             #nginx禁止访问所有.开头的隐藏文件设置
             location ~* ^/(\.) {
                deny all;
             }

             #include /var/www/html/ip.conf;
             include /var/www/html/nginxlocation.conf;
            #静态文件允许缓存
            location ~ .*\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|ttf|js|css)$
            {
                expires      70d;
            }
            #项目文档的文件，禁止浏览器缓存
            location ~ .*\.(?:md)$
            {
                #禁止缓存数据
                add_header Cache-Control no-store;
            }
             client_max_body_size 500M;
             location ~* \.php$
             {
                     include fastcgi_params;
                     #ubuntu 缺少这个配置
                     fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
                     try_files $fastcgi_script_name =404;
                     add_header logid  $request_id;
                     fastcgi_param logid  $request_id;
                     fastcgi_pass 127.0.0.1:9000;
                     fastcgi_index index.php;
             }
    }


}
